#include<iostream>
using namespace std;

bool is_safe(int** arr, int x, int y, int n)
{
    // Checking is there are any queens in the row
    for(int row=0;row<x;row++)
    {
        if(arr[row][y]==1)
        {
            return false;
        }
    }
    // Checking is there are any queens in the left diagonal
    int row=x;
    int col=y;
    while(row>=0 && col>=0)
    {
        if(arr[row][col]==1)
         { return false; }
         
    row--;
    col--;
    }
    
    // Checking is there are any queens in the right diagonal
    row=x;
    col=y;
    while(row>=0 && col<n)
    {
        if(arr[row][col]==1)
         { return false; }
         
    row--;
    col++;
    }

    return true;


}

bool nqueen(int ** arr, int x, int n)
{
    if( x>=n)
    {
        return true;
    }

    for(int col=0;col<n;col++)
    {
        if(is_safe(arr,x,col,n))
        {
            arr[x][col]=1;

            if(nqueen(arr,x+1,n)) //to check if we can palce in next row
            {
                return true;
            }

         arr[x][col]=0; //backtrack  
        }
    }

    return false;
}


int main()
{   cout<<"Enter a number";

     int n;
    cin>>n;
    int** arr=new int*[n]; 
    for (int i=0;i<n;i++)
    {

        arr[i]=new int[n];
        for(int j=0;j<n;j++)
        {
            arr[i][j]=0;

        }
    }
    if(nqueen(arr,0,n))
    {
          for (int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
              {
                 cout<<arr[i][j]<<" ";
              } 
             cout<<endl;             
        }
    }
    
return 0;

}
